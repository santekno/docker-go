# This is a basic workflow to help you get started with Actions

name: CI/CD Golang and Deploy to GAE

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ deploy-with-cicd-google-app-engine ]
  # pull_request:
  #   branches: [ deploy-app-engine ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  audit:
    name: Verify Dependency and Build Golang
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15
    - name: Verify dependencies
      run: go mod verify
    - name: Build
      run: go build -v ./...
    - name: Run go vet
      run: go vet ./...
  test: 
    name: Running Unit Test Golang
    runs-on: ubuntu-latest
    needs: audit
    steps: 
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
      - name: Run tests
        run: make test-coverage
      - name: Upload Coverage report to CodeCov
        uses: codecov/codecov-action@v1.0.0
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: ./coverage.txt
  lint:
    runs-on: ubuntu-latest
    needs: [audit, test]
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.15
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: v1.29

          # Optional: working directory, useful for monorepos
          # working-directory: somedir

          # Optional: golangci-lint command line arguments.
          # args: --issues-exit-code=0

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true then the all caching functionality will be complete disabled,
          #           takes precedence over all other caching options.
          # skip-cache: true

          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          # skip-build-cache: true
  deploy:
    name: Deploying to Google Cloud
    runs-on: ubuntu-latest
    needs: [audit, test, lint]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        project_id: ${{ secrets.GCP_PROJECT }}
        service_account_key: ${{ secrets.GCP_CREDENTIALS }}
    - name: Deploy to App Engine
      id: deploy
      uses: google-github-actions/deploy-appengine@v0.2.0
      with:
        deliverables: app.yaml
        version: v1
        project_id: ${{ secrets.GCP_PROJECT }}
        credentials: ${{ secrets.GCP_CREDENTIALS }}