name: deploy google app engine

on:
  push:
    branches: [golang-app-batch7]

jobs:
  audit:
    name: Verify Dependency and Build Golang
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15
    - name: Verify dependencies
      run: go mod verify
    - name: Build
      run: go build -v ./...
    - name: Run go vet
      run: go vet ./...

  lint:
    runs-on: ubuntu-latest
    needs: [audit]
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.15
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: v1.29

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: [audit, lint]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
      - name: Get Dependency
        run: go mod verify
      - name: Run Test and Create Report
        run: make test-coverage
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=santekno_golang-app
            -Dsonar.tests=.
            -Dsonar.exclusions=**/*_test.go,**/vendor/**,**/*mock*.*,**/files/**,**/docker/**,**/models/**
            -Dsonar.go.coverage.reportPaths=cover.out
            -Dsonar.go.tests.reportPaths=cover.out
            
  deploy:
    name: Deploying to Google Cloud
    runs-on: ubuntu-latest
    needs: [audit, lint, sonarcloud]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        project_id: ${{ secrets.GCP_PROJECT }}
        service_account_key: ${{ secrets.GCP_CREDENTIALS }}
    - name: Deploy to App Engine
      id: deploy
      uses: google-github-actions/deploy-appengine@v0.2.0
      with:
        deliverables: app.yaml
        version: v1
        project_id: ${{ secrets.GCP_PROJECT }}
        credentials: ${{ secrets.GCP_CREDENTIALS }}