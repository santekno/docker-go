# This is a basic workflow to help you get started with Actions

name: CI/CD Golang and Deploy to GAE

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ deploy-with-cicd-google-app-engine ]
  pull_request:
    branches: [ deploy-app-engine ]
    types: [opened, synchronize, reopened]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  audit:
    name: Verify Dependency and Build Golang
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15
    - name: Verify dependencies
      run: go mod verify
    - name: Build
      run: go build -v ./...
    - name: Run go vet
      run: go vet ./...

  lint:
    runs-on: ubuntu-latest
    needs: [audit, test]
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.15
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: v1.29

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: [audit, test, lint]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Get Dependency
        run: go mod verify
      - name: Run Test and Create Report
        run: go test -v -short -coverprofile=cover.out ./...
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=santekno_golang-app
            -Dsonar.tests=.
            -Dsonar.exclusions=**/*_test.go,**/vendor/**,**/*mock*.*,**/files/**,**/docker/**,**/models/**
            -Dsonar.go.coverage.reportPaths=cover.out
            -Dsonar.go.tests.reportPaths=cover.out